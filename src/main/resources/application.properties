spring.application.name=fiap-pedido-service

# --- Configuracao do PostgreSQL ---
spring.datasource.url=jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:fiap-pedido-service}?ssl=false
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA / Hibernate ---
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Flyway ---
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# --- Porta da aplicacao ---
server.port=8079
server.error.include-stacktrace=never

# URL APIs
service.produto.url=http://localhost:8080
service.cliente.url=http://fiap-cliente-service:8081
service.estoque.url=http://localhost:8082
service.pagamento.url=http://localhost:8083

# Feign Configs -
# Feign Timeouts (valores em milissegundos)
feign.client.config.default.connectTimeout=3000
feign.client.config.default.readTimeout=5000
# Feign Retry (habilitado por padrão, mas podemos customizar)
feign.client.config.default.retryer=feign.Retryer.Default

# Kafka Consumer
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=pedido-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer